name: Postform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  cargo_clippy:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y libusb-1.0-0-dev libftdi1-dev libudev-dev
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Run cargo fmt check
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    - name: Run cargo clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features

  cargo_check:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Install dependencies
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt update
        sudo apt install -y libusb-1.0-0-dev libftdi1-dev libudev-dev
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Run cargo check
      run: cargo check

  cargo_build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: Javier-varez/google-repo-action@v0.3
      with:
        manifest-url: 'Javier-varez/manifest'
        manifest-group: 'postform'
        checkout-deps: true
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y libusb-1.0-0-dev libftdi1-dev libudev-dev
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Run cargo build
      working-directory: postform
      run: cargo build
    - name: Archive binaries
      uses: actions/upload-artifact@v2
      with:
        name: postform_persist
        path: postform/target/debug/postform_persist

  cargo_test:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y libusb-1.0-0-dev libftdi1-dev libudev-dev
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Run cargo test
      uses: actions-rs/cargo@v1
      with:
        command: test

  libpostform_build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: Javier-varez/google-repo-action@v0.3
      with:
        manifest-url: 'Javier-varez/manifest'
        manifest-group: 'postform'
        checkout-deps: true
        generated-manifest: 'manifest.xml'
    - name: arm-none-eabi-gcc
      uses: fiam/arm-none-eabi-gcc@v1.0.3
      with:
        release: '9-2020-q2'
    - name: build
      run: make -j
    - name: unit tests
      run: make -j run_tests
    - name: Archive manifest
      uses: actions/upload-artifact@v2
      with:
        name: manifest
        path: manifest.xml

  clang_format:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: Javier-varez/google-repo-action@v0.3
      with:
        manifest-url: 'Javier-varez/manifest'
        manifest-group: 'postform'
        checkout-deps: true
    - name: clang-format lint
      uses: DoozyX/clang-format-lint-action@v0.11
      with:
        source: 'postform'
        clangFormatVersion: 10

  system_test:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y libusb-1.0-0-dev libftdi1-dev libudev-dev
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Run cargo xtask test
      uses: actions-rs/cargo@v1
      with:
        command: xtask
        args: test

  build_docs:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Build docs
      uses: mattnotmitt/doxygen-action@v1
      with:
          working-directory: 'libpostform/'
          doxyfile-path: 'Doxyfile'
    - name: Archive docs
      uses: actions/upload-artifact@v2
      with:
        name: libpostform_docs
        path: libpostform/docs

  libpostform_cmake_build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: Javier-varez/google-repo-action@v0.3
      with:
        manifest-url: 'Javier-varez/manifest'
        manifest-group: 'postform'
        checkout-deps: true
        generated-manifest: 'manifest.xml'
    - name: arm-none-eabi-gcc
      uses: fiam/arm-none-eabi-gcc@v1.0.3
      with:
        release: '9-2020-q2'
    - name: Build with CMake for host platform
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: 'CMakeListsTxtAdvanced'
        cmakeListsTxtPath: '${{ github.workspace }}/postform/CMakeLists.txt'
        cmakeAppendedArgs: '-G Ninja -DCMAKE_CXX_COMPILER=clang++ -DPOSTFORM_BUILD_EXAMPLES=true'
        buildDirectory: '${{ runner.workspace }}/build'
    - name: Build with CMake for thumbv7m
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: 'CMakeListsTxtAdvanced'
        cmakeListsTxtPath: '${{ github.workspace }}/postform/CMakeLists.txt'
        cmakeAppendedArgs: '-G Ninja -D CMAKE_TOOLCHAIN_FILE=cmake/toolchains/armv7m.cmake -DPOSTFORM_BUILD_EXAMPLES=true -DPOSTFORM_BUILD_TARGET_APP=true'
        buildDirectory: '${{ runner.workspace }}/build_thumbv7m'
    - name: Build with CMake for thumbv6m
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: 'CMakeListsTxtAdvanced'
        cmakeListsTxtPath: '${{ github.workspace }}/postform/CMakeLists.txt'
        cmakeAppendedArgs: '-G Ninja -D CMAKE_TOOLCHAIN_FILE=cmake/toolchains/armv6m.cmake -DPOSTFORM_BUILD_EXAMPLES=true -DPOSTFORM_BUILD_TARGET_APP=true'
        buildDirectory: '${{ runner.workspace }}/build_thumbv6m'
